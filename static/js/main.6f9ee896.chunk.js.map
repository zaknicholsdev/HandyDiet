{"version":3,"sources":["components/Recipe/EachRecipe.js","components/Recipe/SearchRecipes.js","components/Recipe/RecipeDetails/Ingredients.js","components/Recipe/RecipeDetails/Instructions.js","components/Recipe/RecipeDetails/Nutrition.js","components/Recipe/RecipeDetails/Details.js","components/Menu/EachMenuItem.js","components/Menu/Menu.js","components/Menu/MenuItemDetails.js","components/SearchByMacros.js","components/Navbar.js","components/Home.js","components/MealPlan.js","App.js","index.js"],"names":["EachRecipe","props","eachRecipe","recipes","map","recipe","key","id","className","alt","src","image","title","readyInMinutes","servings","to","SearchRecipes","state","errors","fields","query","cuisine","intolerance","diet","error","isLoaded","handleValidation","formIsValid","setState","handleChange","event","currentTarget","value","type","name","console","log","prevState","parseInt","handleSubmit","a","preventDefault","fetch","data","json","result","results","this","onSubmit","onChange","onClick","handleClick","Component","RecipeIngredients","eachIngredient","ingredients","ingredient","original","RecipeInstructions","eachInstruction","instructions","length","steps","instruction","number","step","RecipeNutrition","eachNutrient","nutrition","nutrients","filter","includes","nutrient","amount","toFixed","unit","Recipe","componentDidMount","match","params","role","spoonacularScore","extendedIngredients","analyzedInstructions","Nutrition","Ingredients","Instructions","EachMenuItem","eachMenuItem","menuItems","menuItem","servingSize","restaurantChain","Menu","search","target","MenuItem","images","Object","entries","i","charAt","toUpperCase","slice","SearchByMacros","minCalories","maxCalories","calories","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Home","randomRecipes","randomRecipe","MealPlan","mealPlan","timeFrame","targetCalories","items","JSON","parse","day","meals","meal","App","exact","path","component","RecipeDetails","MenuItemDetails","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UA2BeA,MAxBf,SAAoBC,GAChB,IACMC,EADUD,EAAME,QACKC,KAAI,SAAAC,GAC3B,OACI,yBAAKC,IAAKD,EAAOE,GAAIC,UAAU,iCAC3B,yBAAKA,UAAU,sCACX,6BACI,yBAAKA,UAAU,gBAAgBC,IAAI,SAASC,IAAG,+CAA0CL,EAAOM,SAChG,yBAAKH,UAAU,oBACX,wBAAIA,UAAU,cAAcH,EAAOO,OACnC,8CAAoBP,EAAOQ,eAA3B,YACA,0CAAgBR,EAAOS,UACvB,kBAAC,IAAD,CAAMC,GAAE,kBAAaV,EAAOE,GAApB,gBAAsCC,UAAU,+BAAxD,uBAOxB,OACI,kBAAC,WAAD,KAAWN,IC0HJc,E,4MA5IXC,MAAQ,CACJC,OAAQ,GACRC,OAAQ,CACJC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,KAAM,IAEVpB,QAAS,GACTqB,MAAO,KACPC,UAAU,G,EAGdC,iBAAmB,WACf,IACMR,EAAS,GACXS,GAAc,EAQlB,OAVe,EAAKV,MAAME,OAIfC,MACPO,GAAc,EAEdT,EAAOE,MAAQ,yBAEnB,EAAKQ,SAAS,CAAEV,OAAQA,IACjBS,G,EAGXE,aAAe,SAACC,GAAW,IAAD,EACQA,EAAMC,cAA5BC,EADc,EACdA,MAAOC,EADO,EACPA,KAAMC,EADC,EACDA,KACrBC,QAAQC,IAAIH,EAAMD,EAAOE,GACzB,EAAKN,UAAS,SAAAS,GAAS,MAAK,CACxBlB,OAAO,2BACAkB,EAAUlB,QADX,kBAEDe,EAAgB,WAATD,EAAoBK,SAASN,EAAO,IAAMA,S,EAK9DO,a,uCAAe,WAAOT,GAAP,mBAAAU,EAAA,yDACLrB,EAAS,EAAKF,MAAME,OAC1BW,EAAMW,kBACF,EAAKf,mBAHE,0CAKgBgB,MAAM,oDAAD,OAAqDvB,EAAOC,MAA5D,oBAA6ED,EAAOE,QAApF,iBAAoGF,EAAOI,KAA3G,yBAAgIJ,EAAOG,YAAvI,sDALrB,cAKGqB,EALH,gBAMkBA,EAAKC,OANvB,OAMGC,EANH,OAOHV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACVH,UAAU,EACVtB,QAAS0C,EAAOC,UAVjB,kDAaH,EAAKlB,SAAS,CACVH,UAAU,EACVD,MAAK,OAfN,gCAmBPW,QAAQC,IAAI,mBAnBL,0D,6GAuBL,IAAD,EAMDW,KAAK9B,MAHLd,GAHC,EAEDsB,SAFC,EAGDtB,SACAgB,EAJC,EAIDA,OACAD,EALC,EAKDA,OAGJ,OACI,kBAAC,WAAD,KACI,0BAAMV,UAAU,iBAAiBwC,SAAUD,KAAKR,cAC5C,uBAAG/B,UAAU,QAAb,8FACA,yBAAKA,UAAU,cACX,0CACY,2BAAOA,UAAU,eAAeyB,KAAK,OAAOC,KAAK,QAAQF,MAAOb,EAAOC,MAAO6B,SAAUF,KAAKlB,gBAEzG,6BACA,yBAAKrB,UAAU,eAAeU,EAAOE,QAEzC,yBAAKZ,UAAU,cACX,0CAEI,4BAAQA,UAAU,eAAewB,MAAOb,EAAOE,QAASa,KAAK,UAAUe,SAAUF,KAAKlB,cAClF,4BAAQG,MAAM,IAAd,OACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,cAGR,6BACA,yBAAKxB,UAAU,eAAeU,EAAOG,UAEzC,yBAAKb,UAAU,cACX,uCAEI,4BAAQA,UAAU,eAAewB,MAAOb,EAAOI,KAAMW,KAAK,OAAOe,SAAUF,KAAKlB,cAC5E,4BAAQG,MAAM,IAAd,OACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,YAIZ,yBAAKxB,UAAU,cACX,+CAEI,4BAAQA,UAAU,eAAewB,MAAOb,EAAOG,YAAaY,KAAK,cAAce,SAAUF,KAAKlB,cAC1F,4BAAQG,MAAM,IAAd,QACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,cAAd,iBAIZ,2BACIC,KAAK,SACLzB,UAAU,kBACV0C,QAASH,KAAKI,YACdnB,MAAM,YAGd,yBAAKxB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAYL,QAASA,W,GArIjBiD,aCUbC,MAZf,SAA2BpD,GACvB,IACMqD,EADcrD,EAAMsD,YACSnD,KAAI,SAAAoD,GACnC,OACI,wBAAIlD,IAAKkD,EAAWjD,IAAKiD,EAAWC,aAG5C,OACI,kBAAC,WAAD,KAAWH,ICSJI,MAjBf,SAA4BzD,GACxB,IACI0D,EADEC,EAAe3D,EAAM2D,aAE3B,OAAIA,EAAaC,QACbF,EAAkBC,EAAa,GAAGE,MAAM1D,KAAI,SAAA2D,GACxC,OACI,wBAAIzD,IAAKyD,EAAYC,QAASD,EAAYC,OAA1C,KAAoDD,EAAYE,SAOxE,kBAAC,WAAD,KAAWN,IAHJ,mFCYAO,MAtBf,SAAyBjE,GACrBkC,QAAQC,IAAInC,GACZ,IASMkE,EATYlE,EAAMmE,UAAUC,UACEC,QAAO,gBAAG1D,EAAH,EAAGA,MAAH,MAAe,CACtD,WACA,UACA,gBACA,MACA,QACA,SACF2D,SAAS3D,MAC4BR,KAAI,SAAAoE,GACvC,OACI,wBAAIlE,IAAKkE,EAAS5D,OACb4D,EAAS5D,MADd,KACuB4D,EAASC,OAAOC,UAAWF,EAASG,SAInE,OACI,kBAAC,WAAD,KAAWR,ICyEJS,E,4MAtFX3D,MAAQ,CACJO,MAAO,KACPC,UAAU,EACVpB,OAAQ,I,EAGZwE,kB,sBAAoB,gCAAArC,EAAA,6DACRjC,EAAO,EAAKN,MAAM6E,MAAMC,OAAxBxE,GADQ,kBAGOmC,MAAM,uCAAD,OACmBnC,EADnB,+EAHZ,cAGNoC,EAHM,gBAMSA,EAAKC,OANd,OAMNC,EANM,OAOZV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACVH,UAAU,EACVpB,OAAQwC,IAVA,kDAaZ,EAAKjB,SAAS,CACVH,UAAU,EACVD,MAAK,OAfG,0D,uDAuBhB,IAFqBuB,KAAK9B,MAAlBQ,SAEO,OACX,yBAAKjB,UAAU,oBACX,yBAAKA,UAAU,iBAAiBwE,KAAK,UACjC,0BAAMxE,UAAU,WAAhB,gBANP,IAWGD,EAAOwC,KAAK9C,MAAM6E,MAAMC,OAAxBxE,GAXH,EAqBDwC,KAAK9B,MAAMZ,OARXO,EAbC,EAaDA,MACAD,EAdC,EAcDA,MACAE,EAfC,EAeDA,eACAC,EAhBC,EAgBDA,SACAmE,EAjBC,EAiBDA,iBACqB1B,EAlBpB,EAkBD2B,oBACsBtB,EAnBrB,EAmBDuB,qBACad,EApBZ,EAoBDD,UAAaC,UAGjB,OACI,yBAAK7D,UAAU,aACX,oCAAUD,GACV,4BAAKK,GACL,yBAAKJ,UAAU,uCACX,yBAAKE,IAAKC,EAAOH,UAAU,eAE/B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBAAf,aACeK,EADf,YAGA,yBAAKL,UAAU,mBAAf,aACeM,GAEf,yBAAKN,UAAU,mBAAf,UACYyE,EADZ,MAIJ,yBAAKzE,UAAU,YACX,wBAAIA,UAAU,sBACV,8CACA,kBAAC4E,EAAD,CAAWhB,UAAW,CAAEC,gBAE5B,wBAAI7D,UAAU,sBACV,2CACA,kBAAC6E,EAAD,CAAa9B,YAAaA,KAE9B,wBAAI/C,UAAU,sBACV,4CACA,kBAAC8E,EAAD,CAAc1B,aAAcA,W,GAhF/BR,aCmBNmC,MAtBf,SAAsBtF,GAClB,IACMuF,EADYvF,EAAMwF,UACOrF,KAAI,SAAAsF,GAC/B,OACI,yBAAKpF,IAAKoF,EAASnF,GAAIC,UAAU,iCAC7B,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,gBAAgBC,IAAI,WAAWC,IAAKgF,EAAS/E,QAC5D,yBAAKH,UAAU,aACX,wBAAIA,UAAU,cAAckF,EAAS9E,OACrC,8CAAoB8E,EAASC,aAC7B,yBAAKnF,UAAU,UAAf,qBAA2CkF,EAASE,iBACpD,kBAAC,IAAD,CAAM7E,GAAE,yBAAoB2E,EAASnF,IAAMC,UAAU,+BAArD,sBAMpB,OACI,kBAAC,WAAD,KAAWgF,ICgEJK,E,4MAhFX5E,MAAQ,CACJO,MAAO,KACPiE,UAAW,GACXK,OAAQ,GACR5E,OAAQ,I,EAGZW,aAAe,SAACC,GACZ,EAAKF,SAAL,eAAiBE,EAAMiE,OAAO7D,KAAOJ,EAAMiE,OAAO/D,S,EAGtDN,iBAAmB,WACf,IAAMoE,EAAS,EAAK7E,MAAM6E,OACpB5E,EAAS,GACXS,GAAc,EAUlB,OARKmE,IACD5E,EAAO4E,OAAS,uBAChBnE,GAAc,GAGlB,EAAKC,SAAS,CAAEV,OAAQA,IACxBiB,QAAQC,IAAIT,GACZQ,QAAQC,IAAI0D,GACLnE,G,EAGXY,a,uCAAe,WAAOT,GAAP,mBAAAU,EAAA,yDACLsD,EAAS,EAAK7E,MAAM6E,OAC1BhE,EAAMW,kBACF,EAAKf,mBAHE,0CAKgBgB,MAAM,2DAAD,OAA4DoD,EAA5D,uDALrB,cAKGnD,EALH,gBAMkBA,EAAKC,OANvB,OAMGC,EANH,OAOHV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACV6D,UAAW5C,EAAO4C,YATnB,kDAYH,EAAK7D,SAAS,CACVJ,MAAK,OAbN,gCAiBPW,QAAQC,IAAI,mBAjBL,0D,6GAqBL,IAAD,EACiCW,KAAK9B,MAAnCwE,EADH,EACGA,UAAWK,EADd,EACcA,OAAQ5E,EADtB,EACsBA,OAE3B,OACI,kBAAC,WAAD,KACI,0BAAMV,UAAU,iBAAiBwC,SAAUD,KAAKR,cAC5C,uBAAG/B,UAAU,QAAb,qIACA,yBAAKA,UAAU,cACX,0CACY,2BAAOA,UAAU,mBAAmByB,KAAK,OAAOC,KAAK,SAASF,MAAO8D,EAAQ7C,SAAUF,KAAKlB,gBAExG,6BACA,yBAAKrB,UAAU,eAAeU,EAAO4E,SAEzC,2BACI7D,KAAK,SACLzB,UAAU,kBACV0C,QAASH,KAAKI,YACdnB,MAAM,YAGd,wBAAIxB,UAAU,aACV,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAciF,UAAWA,W,GAxE9BrC,a,QC4DJ4C,E,kDA7DX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTO,MAAO,KACPC,UAAU,EACViE,SAAU,IALC,E,2LASPnF,EAAOwC,KAAK9C,MAAM6E,MAAMC,OAAxBxE,G,kBAEemC,MAAM,8CAAD,OAA+CnC,EAA/C,6C,cAAlBoC,E,gBACeA,EAAKC,O,OAApBC,E,OACNE,KAAKnB,SAAS,CACVH,UAAU,EACViE,SAAU7C,I,kDAGdE,KAAKnB,SAAS,CACVH,UAAU,EACVD,MAAK,O,+IAMb,IADqBuB,KAAK9B,MAAlBQ,SACO,OACX,yBAAKjB,UAAU,oBACX,yBAAKA,UAAU,iBAAiBwE,KAAK,UACjC,0BAAMxE,UAAU,WAAhB,gBALP,IASGD,EAAOwC,KAAK9C,MAAM6E,MAAMC,OAAxBxE,GATH,EAeDwC,KAAK9B,MAAMyE,SAJX9E,EAXC,EAWDA,MACAgF,EAZC,EAYDA,gBACQjF,EAbP,EAaDsF,OACW7B,EAdV,EAcDA,UAGJ,OACI,yBAAK5D,UAAU,aACX,oCAAUD,GACV,4BAAKK,GACL,4BAAKgF,GACL,yBAAKpF,UAAU,4BAA4BE,IAAKC,EAAM,GAAIF,IAAKG,IAC/D,yBAAKJ,UAAU,OACV0F,OAAOC,QAAQ/B,GAAWhE,KAAI,WAAegG,GAAO,IAAD,mBAAnB9F,EAAmB,KAAd0B,EAAc,KAChD,OACI,yBAAK1B,IAAK8F,EAAG5F,UAAU,mBACnB,gCAASF,EAAI+F,OAAO,GAAGC,cAAgBhG,EAAIiG,MAAM,IADrD,KACoEvE,Y,GApDzEoB,aCiJRoD,E,4MA/IXvF,MAAQ,CACJO,MAAO,KACPrB,QAAS,GACTgB,OAAQ,CACJsF,YAAa,GACbC,YAAa,IAQjBxF,OAAQ,I,EAGZQ,iBAAmB,WACf,IAAMP,EAAS,EAAKF,MAAME,OACpBD,EAAS,GACXS,GAAc,EAiBlB,OAfKR,EAAOsF,cACRvF,EAAOuF,YAAc,uBACrB9E,GAAc,GAEbR,EAAOuF,YAGDvF,EAAOsF,aAAetF,EAAOuF,cACpCxF,EAAOuF,YAAc,yDACrB9E,GAAc,IAJdA,GAAc,EACdT,EAAOwF,YAAc,wBAMzB,EAAK9E,SAAS,CAAEV,OAAQA,IACxBiB,QAAQC,IAAIT,GACZQ,QAAQC,IAAIjB,GACLQ,G,EAGXE,aAAe,SAACC,GAAW,IAAD,EACQA,EAAMC,cAA5BC,EADc,EACdA,MAAOC,EADO,EACPA,KAAMC,EADC,EACDA,KACrBC,QAAQC,IAAIH,EAAMD,EAAOE,GACzB,EAAKN,UAAS,SAAAS,GAAS,MAAK,CACxBlB,OAAO,2BACAkB,EAAUlB,QADX,kBAEDe,EAAgB,WAATD,EAAoBK,SAASN,EAAO,IAAMA,S,EAK9DO,a,uCAAe,WAAOT,GAAP,mBAAAU,EAAA,yDACLrB,EAAS,EAAKF,MAAME,OAC1BW,EAAMW,kBACF,EAAKf,mBAHE,0CAKgBgB,MAAM,mEAAD,OAC+CvB,EAAOsF,YADtD,wBACiFtF,EAAOuF,YADxF,kEALrB,cAKG/D,EALH,gBAQkBA,EAAKC,OARvB,OAQGC,EARH,OASHV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACVzB,QAAS0C,IAXV,kDAcH,EAAKjB,SAAS,CACVH,UAAU,EACVD,MAAK,OAhBN,gCAoBPW,QAAQC,IAAI,mBApBL,0D,6GAwBL,IAAD,EAMDW,KAAK9B,MAJLC,EAFC,EAEDA,OACAf,EAHC,EAGDA,QACAgB,EAJC,EAIDA,OAJC,EAKDM,SAGJ,OACI,kBAAC,WAAD,KACI,0BAAMjB,UAAU,iBAAiBwC,SAAUD,KAAKR,cAC5C,uBAAG/B,UAAU,QAAb,wJACA,yBAAKA,UAAU,cACX,mDAEQ,2BACAA,UAAU,mBACVyB,KAAK,SACLC,KAAK,cACLF,MAAOb,EAAOsF,YACdxD,SAAUF,KAAKlB,gBAGvB,6BACA,yBAAKrB,UAAU,eAAeU,EAAOuF,cAEzC,yBAAKjG,UAAU,cACX,mDAEQ,2BACAA,UAAU,mBACVyB,KAAK,SACLC,KAAK,cACLF,MAAOb,EAAOuF,YACdzD,SAAUF,KAAKlB,gBAGvB,6BACA,yBAAKrB,UAAU,eAAeU,EAAOwF,cAEzC,2BACIzE,KAAK,SACLzB,UAAU,kBACV0C,QAASH,KAAKI,YACdnB,MAAM,YAGd,yBAAKxB,UAAU,aACX,yBAAKA,UAAU,OACVL,EAAQC,KAAI,SAAAC,GAAM,OACf,yBAAKC,IAAKD,EAAOE,GAAIC,UAAU,iCAC3B,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,gBAAgBC,IAAI,SAASC,IAAKL,EAAOM,QACxD,yBAAKH,UAAU,oBACX,wBAAIA,UAAU,cAAcH,EAAOO,OACnC,0CAAgBP,EAAOsG,UACvB,kBAAC,IAAD,CAAM5F,GAAE,kBAAaV,EAAOE,GAApB,gBAAsCC,UAAU,+BAAxD,6B,GAnIX4C,aCoBdwD,EApBA,WACX,OACI,yBAAKpG,UAAU,iDACX,kBAAC,IAAD,CAAMA,UAAU,eAAeO,GAAG,KAAlC,YACA,4BAAQP,UAAU,iBAAiByB,KAAK,SAAS4E,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC1K,0BAAMzG,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BD,GAAG,sBACzC,yBAAKC,UAAU,sBACX,kBAAC,IAAD,CAAMA,UAAU,oBAAoBO,GAAG,cAAvC,0BACA,kBAAC,IAAD,CAAMP,UAAU,oBAAoBO,GAAG,YAAvC,qBACA,kBAAC,IAAD,CAAMP,UAAU,oBAAoBO,GAAG,qBAAvC,2BACA,kBAAC,IAAD,CAAMP,UAAU,oBAAoBO,GAAG,SAAvC,oCCqDLmG,E,4MAhEXjG,MAAQ,CACJkG,cAAe,GACf1F,UAAU,G,EAGdoD,kB,sBAAoB,8BAAArC,EAAA,+EAEOE,MAAM,+FAFb,cAENC,EAFM,gBAGSA,EAAKC,OAHd,OAGNC,EAHM,OAIZV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACVH,UAAU,EACV0F,cAAetE,IAPP,kDAUZ,EAAKjB,SAAS,CACVH,UAAU,EACVD,MAAK,OAZG,0D,uDAiBV,IAAD,EAC+BuB,KAAK9B,MAAjCkG,EADH,EACGA,cAAe1F,EADlB,EACkBA,SAEvB,OACI,kBAAC,WAAD,KACI,yBAAKjB,UAAU,mDACX,yBAAKA,UAAU,aACX,oDACA,uBAAGA,UAAU,QAAb,sSAEA,kBAAC,IAAD,CAAMO,GAAG,WAAWP,UAAU,+BAA9B,mBACA,6BACA,kBAAC,IAAD,CAAMO,GAAG,WAAWP,UAAU,uBAA9B,sBAGR,yBAAKA,UAAU,aACX,uBAAGA,UAAU,QAAb,mBACA,6FACA,6BACA,yBAAKA,UAAU,OACTiB,EAIO0F,EAAchH,QAAQC,KAAI,SAAAgH,GAAY,OAC3C,yBAAK9G,IAAK8G,EAAa7G,GAAIC,UAAU,uBACjC,yBAAKA,UAAU,iCACX,6BACI,yBAAKE,IAAK0G,EAAazG,MAAOH,UAAU,cACxC,yBAAKA,UAAU,sCAAqC,gCAAS4G,EAAaxG,QAC1E,kBAAC,IAAD,CAAMG,GAAE,kBAAaqG,EAAa7G,GAA1B,gBAA4CC,UAAU,mCAA9D,sBAVH,yBAAKA,UAAU,4BACxB,yBAAKA,UAAU,iBAAiBwE,KAAK,UACjC,0BAAMxE,UAAU,WAAhB,uB,GA7Cb4C,aC8KJiE,E,4MA7KXpG,MAAQ,CACJO,MAAO,KACP8F,SAAU,GACVnG,OAAQ,CACJoG,UAAW,GACXC,eAAgB,GAChBjG,KAAM,IAEVL,OAAQ,GACRO,UAAU,G,EAGdC,iBAAmB,WACf,IAAMP,EAAS,EAAKF,MAAME,OACpBD,EAAS,GACXS,GAAc,EAclB,OAZKR,EAAOoG,YACRrG,EAAOqG,UAAY,uBACnB5F,GAAc,GAEbR,EAAOqG,iBACR7F,GAAc,EACdT,EAAOsG,eAAiB,wBAG5B,EAAK5F,SAAS,CAAEV,OAAQA,IACxBiB,QAAQC,IAAIT,GACZQ,QAAQC,IAAIjB,GACLQ,G,EAGXE,aAAe,SAACC,GAAW,IAAD,EACQA,EAAMC,cAA5BC,EADc,EACdA,MAAOC,EADO,EACPA,KAAMC,EADC,EACDA,KACrBC,QAAQC,IAAIH,EAAMD,EAAOE,GACzB,EAAKN,UAAS,SAAAS,GAAS,MAAK,CACxBlB,OAAO,2BACAkB,EAAUlB,QADX,kBAEDe,EAAgB,WAATD,EAAoBK,SAASN,EAAO,IAAMA,S,EAK9DO,a,uCAAe,WAAOT,GAAP,mBAAAU,EAAA,yDACLrB,EAAS,EAAKF,MAAME,OAC1BW,EAAMW,kBACF,EAAKf,mBAHE,0CAKgBgB,MAAM,oEAAD,OACgDvB,EAAOoG,UADvD,2BACmFpG,EAAOqG,eAD1F,iBACiHrG,EAAOI,KADxH,6CALrB,cAKGoB,EALH,gBAQkBA,EAAKC,OARvB,OAQGC,EARH,OASHV,QAAQC,IAAIS,GACZ,EAAKjB,SAAS,CACV0F,SAAUzE,EACVpB,UAAU,IAZX,kDAeH,EAAKG,SAAS,CACVH,UAAU,EACVD,MAAK,OAjBN,gCAqBPW,QAAQC,IAAI,mBArBL,0D,6GAyBL,IAAD,EAMDW,KAAK9B,MAJLC,EAFC,EAEDA,OACAoG,EAHC,EAGDA,SACAnG,EAJC,EAIDA,OACAM,EALC,EAKDA,SAGJ,OACI,kBAAC,WAAD,KACI,0BAAMjB,UAAU,iBAAiBwC,SAAUD,KAAKR,cAC5C,uBAAG/B,UAAU,QAAb,iFACA,8EACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gCACX,2BACIA,UAAU,mBACVyB,KAAK,QACLC,KAAK,YACLF,MAAM,MACNiB,SAAUF,KAAKlB,eAEnB,2BAAOrB,UAAU,oBAAjB,QAEJ,yBAAKA,UAAU,gCACX,2BACIA,UAAU,mBACVyB,KAAK,QACLC,KAAK,YACLF,MAAM,OACNiB,SAAUF,KAAKlB,eAEnB,2BAAOrB,UAAU,oBAAjB,SAEJ,yBAAKA,UAAU,eAAeU,EAAOqG,YAEzC,yBAAK/G,UAAU,cACX,kDAEQ,2BACAA,UAAU,eACVyB,KAAK,SACLC,KAAK,iBACLF,MAAOb,EAAOqG,eACdvE,SAAUF,KAAKlB,gBAGvB,6BACA,yBAAKrB,UAAU,eAAeU,EAAOsG,iBAEzC,yBAAKhH,UAAU,cACX,uCAEI,4BAAQA,UAAU,eAAewB,MAAOb,EAAOI,KAAMW,KAAK,OAAOe,SAAUF,KAAKlB,cAC5E,4BAAQG,MAAM,IAAd,OACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,YAIZ,2BACIC,KAAK,SACLzB,UAAU,kBACV0C,QAASH,KAAKI,YACdnB,MAAM,YAGd,yBAAKxB,UAAU,aACX,yBAAKA,UAAU,OACViB,GAAY6F,EAASG,MAAQH,EAASG,MAAMrH,KAAI,SAAAC,GAAM,OACnD,yBAAKC,IAAKoH,KAAKC,MAAMtH,EAAO2B,OAAOzB,GAAIC,UAAU,iCAC7C,yBAAKA,UAAU,sCACX,yBAAKE,IAAG,+CAA0CgH,KAAKC,MAAMtH,EAAO2B,OAAOzB,GAAnE,gBAAqFC,UAAU,kBACvG,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,cAAckH,KAAKC,MAAMtH,EAAO2B,OAAOpB,OACrD,uBAAGJ,UAAU,IAAb,QAAsBH,EAAOuH,KAC7B,kBAAC,IAAD,CAAM7G,GAAE,kBAAa2G,KAAKC,MAAMtH,EAAO2B,OAAOzB,GAAtC,gBAAwDC,UAAU,+BAA1E,sBAIX,KACJiB,GAAY6F,EAASO,MAAQP,EAASO,MAAMzH,KAAI,SAAA0H,GAAI,OACjD,yBAAKxH,IAAKwH,EAAKvH,GAAIC,UAAU,iCACzB,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,gBAAgBE,IAAG,+CAA0CoH,EAAKnH,SACjF,yBAAKH,UAAU,oBACX,wBAAIA,UAAU,cAAcsH,EAAKlH,OACjC,wCAAckH,EAAKjH,eAAnB,YACA,uBAAGL,UAAU,IAAb,aAA2BsH,EAAKhH,UAChC,kBAAC,IAAD,CAAMC,GAAE,kBAAa+G,EAAKvH,GAAlB,gBAAoCC,UAAU,+BAAtD,sBAIX,Y,GArKN4C,aC8BR2E,EAnBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,aAAaC,UAAWb,IAC1C,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,WAAWC,UAAWlH,IACxC,kBAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,2BAA2BC,UAAWC,IACxD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWrC,IACrC,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,sBAAsBC,UAAWE,IACnD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,oBAAoBC,UAAW1B,QCrB3D6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6f9ee896.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction EachRecipe(props) {\r\n    const recipes = props.recipes\r\n    const eachRecipe = recipes.map(recipe => {\r\n        return (\r\n            <div key={recipe.id} className=\"col-12 col-sm-6 col-md-4 mt-2\">\r\n                <div className=\"card card-stuff mt-3 footer-widget\">\r\n                    <div>\r\n                        <img className=\"img-fluid img\" alt=\"recipe\" src={`https://spoonacular.com/recipeImages/${recipe.image}`} />\r\n                        <div className=\"card-body col-eq\">\r\n                            <h5 className=\"card-title\">{recipe.title}</h5>\r\n                            <div>Time to cook: {recipe.readyInMinutes} Minutes</div>\r\n                            <div>Servings: {recipe.servings}</div>\r\n                            <Link to={`recipes/${recipe.id}/information`} className=\"btn btn-success info-button\">View Details</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <Fragment>{eachRecipe}</Fragment>\r\n    )\r\n}\r\n\r\nexport default EachRecipe","import React, { Fragment, Component } from 'react';\r\n\r\nimport EachRecipe from './EachRecipe'\r\n\r\nclass SearchRecipes extends Component {\r\n    state = {\r\n        errors: {},\r\n        fields: {\r\n            query: '',\r\n            cuisine: '',\r\n            intolerance: '',\r\n            diet: ''\r\n        },\r\n        recipes: [],\r\n        error: null,\r\n        isLoaded: false,\r\n    };\r\n\r\n    handleValidation = () => {\r\n        const fields = this.state.fields\r\n        const errors = {};\r\n        let formIsValid = false;\r\n\r\n        if (fields.query) {\r\n            formIsValid = true;\r\n        } else {\r\n            errors.query = \"Search cannot be empty\";\r\n        }\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value, type, name } = event.currentTarget\r\n        console.log(type, value, name);\r\n        this.setState(prevState => ({\r\n            fields: {\r\n                ...prevState.fields,\r\n                [name]: type === 'number' ? parseInt(value, 10) : value\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        const fields = this.state.fields\r\n        event.preventDefault();\r\n        if (this.handleValidation()) {\r\n            try {\r\n                const data = await fetch(`https://api.spoonacular.com/recipes/search?query=${fields.query}&cuisine=${fields.cuisine}&diet=${fields.diet}&intolerances=${fields.intolerance}&number=6&apiKey=aa3d290f817b4356a170f6ffde9ecfea`)\r\n                const result = await data.json()\r\n                console.log(result)\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    recipes: result.results,\r\n                });\r\n            } catch (error) {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"Form is invalid\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoaded,\r\n            recipes,\r\n            fields,\r\n            errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <form className=\"container mt-2\" onSubmit={this.handleSubmit}>\r\n                    <p className=\"lead\">Search for over 360,000 different recipes and filter your results by dietary requirements.</p>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Search: <input className=\"form-control\" type=\"text\" name=\"query\" value={fields.query} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.query}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Cuisine:\r\n                            <select className=\"form-control\" value={fields.cuisine} name=\"cuisine\" onChange={this.handleChange} >\r\n                                <option value=\"\">Any</option>\r\n                                <option value=\"American\">American</option>\r\n                                <option value=\"Chinese\">Chinese</option>\r\n                                <option value=\"Japanese\">Japanese</option>\r\n                                <option value=\"Italian\">Italian</option>\r\n                                <option value=\"Mexican\">Mexican</option>\r\n                                <option value=\"Thai\">Thai</option>\r\n                                <option value=\"French\">French</option>\r\n                                <option value=\"Southern\">Southern</option>\r\n                            </select>\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.cuisine}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >\r\n                            Diet:\r\n                            <select className=\"form-control\" value={fields.diet} name=\"diet\" onChange={this.handleChange} >\r\n                                <option value=\"\">Any</option>\r\n                                <option value=\"Gluten Free\">Gluten Free</option>\r\n                                <option value=\"Ketogenic\">Ketogenic</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n                                <option value=\"Paleo\">Paleo</option>\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >\r\n                            Intolerances:\r\n                            <select className=\"form-control\" value={fields.intolerance} name=\"intolerance\" onChange={this.handleChange} >\r\n                                <option value=\"\">None</option>\r\n                                <option value=\"Soy Free\">Soy Free</option>\r\n                                <option value=\"Peanut Free\">Peanut Free</option>\r\n                                <option value=\"Grain Free\">Grain Free</option>\r\n                                <option value=\"Dairy Free\">Dairy Free</option>\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={this.handleClick}\r\n                        value=\"Submit\"\r\n                    />\r\n                </form>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <EachRecipe recipes={recipes} />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchRecipes;","import React, { Fragment } from 'react'\r\n\r\nfunction RecipeIngredients(props) {\r\n    const ingredients = props.ingredients\r\n    const eachIngredient = ingredients.map(ingredient => {\r\n        return (\r\n            <li key={ingredient.id}>{ingredient.original}</li>\r\n        )\r\n    })\r\n    return (\r\n        <Fragment>{eachIngredient}</Fragment>\r\n    )\r\n}\r\n\r\nexport default RecipeIngredients","import React, { Fragment } from 'react'\r\n\r\nfunction RecipeInstructions(props) {\r\n    const instructions = props.instructions\r\n    let eachInstruction\r\n    if (instructions.length) {\r\n        eachInstruction = instructions[0].steps.map(instruction => {\r\n            return (\r\n                <li key={instruction.number}>{instruction.number}: {instruction.step}</li>\r\n            )\r\n        })\r\n    } else {\r\n        return <div>Sorry! There are no instructions for this recipe.</div>\r\n    }\r\n    return (\r\n        <Fragment>{eachInstruction}</Fragment>\r\n    )\r\n}\r\n\r\nexport default RecipeInstructions","import React, { Fragment } from 'react'\r\n\r\nfunction RecipeNutrition(props) {\r\n    console.log(props)\r\n    const nutrients = props.nutrition.nutrients\r\n    const filteredNutrients = nutrients.filter(({ title }) => [\r\n        'Calories',\r\n        'Protein',\r\n        'Carbohydrates',\r\n        'Fat',\r\n        'Sugar',\r\n        'Fiber'\r\n    ].includes(title));\r\n    const eachNutrient = filteredNutrients.map(nutrient => {\r\n        return (\r\n            <li key={nutrient.title}>\r\n                {nutrient.title}: {nutrient.amount.toFixed()}{nutrient.unit}\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <Fragment>{eachNutrient}</Fragment>\r\n    )\r\n}\r\nexport default RecipeNutrition","import React, { Component } from 'react'\r\n\r\nimport Ingredients from './Ingredients'\r\nimport Instructions from './Instructions'\r\nimport Nutrition from './Nutrition'\r\n\r\nclass Recipe extends Component {\r\n\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        recipe: []\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        const { id } = this.props.match.params;\r\n        try {\r\n            const data = await fetch(\r\n                `https://api.spoonacular.com/recipes/${id}/information?includeNutrition=true&apiKey=bb6a675616934bed81e967cc50497f10`\r\n            );\r\n            const result = await data.json();\r\n            console.log(result);\r\n            this.setState({\r\n                isLoaded: true,\r\n                recipe: result,\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isLoaded } = this.state;\r\n\r\n        if (!isLoaded) return (\r\n            <div className=\"text-center mt-3\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n        const { id } = this.props.match.params;\r\n        const {\r\n            title,\r\n            image,\r\n            readyInMinutes,\r\n            servings,\r\n            spoonacularScore,\r\n            extendedIngredients: ingredients,\r\n            analyzedInstructions: instructions,\r\n            nutrition: { nutrients }\r\n        } = this.state.recipe;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div>id: {id}</div>\r\n                <h3>{title}</h3>\r\n                <div className=\"col-xs-12 col-md-6 offset-md-3 my-3\">\r\n                    <img src={image} className=\"img-fluid\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        Ready In: {readyInMinutes} Minutes\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        Servings: {servings}\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        Score: {spoonacularScore}%\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <ul className=\"col-xs-12 col-md-4\">\r\n                        <h5>Nutrition Info</h5>\r\n                        <Nutrition nutrition={{ nutrients }} />\r\n                    </ul>\r\n                    <ul className=\"col-xs-12 col-md-4\">\r\n                        <h5>Ingredients</h5>\r\n                        <Ingredients ingredients={ingredients} />\r\n                    </ul>\r\n                    <ul className=\"col-xs-12 col-md-4\">\r\n                        <h5>Instructions</h5>\r\n                        <Instructions instructions={instructions} />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recipe;","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction EachMenuItem(props) {\r\n    const menuItems = props.menuItems\r\n    const eachMenuItem = menuItems.map(menuItem => {\r\n        return (\r\n            <div key={menuItem.id} className=\"col-12 col-sm-6 col-md-4 mb-2\">\r\n                <div className=\"card card-stuff mt-3 footer-widget\">\r\n                    <img className=\"img-fluid img\" alt=\"menuItem\" src={menuItem.image} />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{menuItem.title}</h5>\r\n                        <div>Serving Size: {menuItem.servingSize}</div>\r\n                        <div className=\"col-eq\">Restaurant Chain: {menuItem.restaurantChain}</div>\r\n                        <Link to={`food/menuItems/${menuItem.id}`} className=\"btn btn-success info-button\">View Details</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <Fragment>{eachMenuItem}</Fragment>\r\n    )\r\n}\r\n\r\nexport default EachMenuItem","import React, { Fragment, Component } from 'react';\r\n\r\nimport EachMenuItem from './EachMenuItem'\r\n\r\nclass Menu extends Component {\r\n    state = {\r\n        error: null,\r\n        menuItems: [],\r\n        search: '',\r\n        errors: {}\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleValidation = () => {\r\n        const search = this.state.search\r\n        const errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!search) {\r\n            errors.search = \"Fill out this field.\"\r\n            formIsValid = false;\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        console.log(formIsValid);\r\n        console.log(search)\r\n        return formIsValid\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        const search = this.state.search;\r\n        event.preventDefault();\r\n        if (this.handleValidation()) {\r\n            try {\r\n                const data = await fetch(`https://api.spoonacular.com/food/menuItems/search?query=${search}&number=30&apiKey=aa3d290f817b4356a170f6ffde9ecfea`)\r\n                const result = await data.json()\r\n                console.log(result)\r\n                this.setState({\r\n                    menuItems: result.menuItems,\r\n                });\r\n            } catch (error) {\r\n                this.setState({\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            console.log('Form is invalid')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { menuItems, search, errors } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <form className=\"container mt-3\" onSubmit={this.handleSubmit}>\r\n                    <p className=\"lead\">Search over 115,000 menu items from over 800 fast food and chain restaurants. For example, McDonald's Big Mac or Starbucks Mocha.</p>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Search: <input className=\"m-1 form-control\" type=\"text\" name=\"search\" value={search} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.search}</div>\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={this.handleClick}\r\n                        value=\"Submit\"\r\n                    />\r\n                </form>\r\n                <ul className=\"container\">\r\n                    <div className=\"row\">\r\n                        <EachMenuItem menuItems={menuItems} />\r\n                    </div>\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react'\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            menuItem: {}\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        try {\r\n            const data = await fetch(`https://api.spoonacular.com/food/menuItems/${id}?apiKey=aa3d290f817b4356a170f6ffde9ecfea`)\r\n            const result = await data.json();\r\n            this.setState({\r\n                isLoaded: true,\r\n                menuItem: result,\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { isLoaded } = this.state;\r\n        if (!isLoaded) return (\r\n            <div className=\"text-center mt-3\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n        const { id } = this.props.match.params;\r\n        const {\r\n            title,\r\n            restaurantChain,\r\n            images: image,\r\n            nutrition: nutrition\r\n        } = this.state.menuItem\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div>id: {id}</div>\r\n                <h3>{title}</h3>\r\n                <h5>{restaurantChain}</h5>\r\n                <img className=\"col-md-6 offset-md-3 my-3\" src={image[1]} alt={title} />\r\n                <div className=\"row\">\r\n                    {Object.entries(nutrition).map(([key, value], i) => {\r\n                        return (\r\n                            <div key={i} className=\"col text-center\">\r\n                                <strong>{key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {value}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, { Fragment, Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SearchByMacros extends Component {\r\n    state = {\r\n        error: null,\r\n        recipes: [],\r\n        fields: {\r\n            minCalories: '',\r\n            maxCalories: '',\r\n            // minCarbs: '',\r\n            // maxCarbs: '',\r\n            // minProtein: '',\r\n            // maxProtein: '',\r\n            // minFat: '',\r\n            // maxFat: '',\r\n        },\r\n        errors: {}\r\n    };\r\n\r\n    handleValidation = () => {\r\n        const fields = this.state.fields\r\n        const errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!fields.minCalories) {\r\n            errors.minCalories = \"Fill out this field.\"\r\n            formIsValid = false;\r\n        }\r\n        if (!fields.maxCalories) {\r\n            formIsValid = false;\r\n            errors.maxCalories = \"Fill out this field.\"\r\n        } else if (fields.minCalories >= fields.maxCalories) {\r\n            errors.minCalories = \"Min calories can't be higher or equal to max calories.\"\r\n            formIsValid = false;\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        console.log(formIsValid);\r\n        console.log(fields)\r\n        return formIsValid\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value, type, name } = event.currentTarget\r\n        console.log(type, value, name);\r\n        this.setState(prevState => ({\r\n            fields: {\r\n                ...prevState.fields,\r\n                [name]: type === 'number' ? parseInt(value, 10) : value\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        const fields = this.state.fields\r\n        event.preventDefault();\r\n        if (this.handleValidation()) {\r\n            try {\r\n                const data = await fetch(\r\n                    `https://api.spoonacular.com/recipes/findByNutrients?minCalories=${fields.minCalories}&maxCalories=${fields.maxCalories}&random=true&number=3&apiKey=aa3d290f817b4356a170f6ffde9ecfea`\r\n                )\r\n                const result = await data.json();\r\n                console.log(result)\r\n                this.setState({\r\n                    recipes: result,\r\n                });\r\n            } catch (error) {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"Form is invalid\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            errors,\r\n            recipes,\r\n            fields,\r\n            isLoaded\r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <form className=\"container mt-3\" onSubmit={this.handleSubmit}>\r\n                    <p className=\"lead\">Find a set of recipes that adhere to the given nutritional limits. You may set limits for macronutrients: calories, protein, fat, and carbohydrates.</p>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Minimum Calories:\r\n                                <input\r\n                                className=\"m-1 form-control\"\r\n                                type=\"number\"\r\n                                name=\"minCalories\"\r\n                                value={fields.minCalories}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.minCalories}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Maximum Calories:\r\n                                <input\r\n                                className=\"m-1 form-control\"\r\n                                type=\"number\"\r\n                                name=\"maxCalories\"\r\n                                value={fields.maxCalories}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.maxCalories}</div>\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={this.handleClick}\r\n                        value=\"Submit\"\r\n                    />\r\n                </form>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {recipes.map(recipe => (\r\n                            <div key={recipe.id} className=\"col-12 col-sm-6 col-md-4 mb-3\">\r\n                                <div className=\"card card-stuff mt-3 footer-widget\">\r\n                                    <img className=\"img-fluid img\" alt=\"recipe\" src={recipe.image} />\r\n                                    <div className=\"card-body col-eq\">\r\n                                        <h5 className=\"card-title\">{recipe.title}</h5>\r\n                                        <div>Calories: {recipe.calories}</div>\r\n                                        <Link to={`recipes/${recipe.id}/information`} className=\"btn btn-success info-button\">View Details</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchByMacros;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light navbar-expand-lg\">\r\n            <Link className=\"navbar-brand\" to=\"/\">EasyDiet</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"navbar-collapse collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav mr-auto\">\r\n                    <Link className=\"nav-item nav-link\" to=\"/meal-plan\">Get a Custom Meal Plan</Link>\r\n                    <Link className=\"nav-item nav-link\" to=\"/recipes\">Search Any Recipe</Link>\r\n                    <Link className=\"nav-item nav-link\" to=\"/search-by-macros\">Search Recipe by Macros</Link>\r\n                    <Link className=\"nav-item nav-link\" to=\"/menu\">Search Restaurant Menu Items</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        randomRecipes: [],\r\n        isLoaded: false\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const data = await fetch(`https://api.spoonacular.com/recipes/random?number=4&apiKey=bb6a675616934bed81e967cc50497f10`);\r\n            const result = await data.json();\r\n            console.log(result)\r\n            this.setState({\r\n                isLoaded: true,\r\n                randomRecipes: result\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { randomRecipes, isLoaded } = this.state\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"jumbotron jumbotron-fluid hero-image text-white\">\r\n                    <div className=\"container\">\r\n                        <h3>Welcome to EasyDiet!</h3>\r\n                        <p className=\"lead\">EasyDiet is like a nutritionist in your pocket. Tell EasyDiet your target calories and diet type (keto, paleo, vegan, etc.).\r\n                        EasyDiet will give you a custom diet based on your preferances. You can also search for recipes and restaurant items based on several different dietary requirements.</p>\r\n                        <Link to=\"/recipes\" className=\"btn btn-success btn-lg mb-2\">Search Recipes!</Link>\r\n                        <br />\r\n                        <Link to=\"/recipes\" className=\"btn btn-dark btn-lg\">Get a Meal Plan!</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <p className=\"lead\">Random Recipes!</p>\r\n                    <p>Every time you visit the homepage you'll be shown new recipes!</p>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        {!isLoaded ? <div className=\"text-center mt-3 mx-auto\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div> : randomRecipes.recipes.map(randomRecipe => (\r\n                            <div key={randomRecipe.id} className=\"col-6 col-md-3 mb-3\">\r\n                                <div className=\"card card-stuff footer-widget\">\r\n                                    <div>\r\n                                        <img src={randomRecipe.image} className=\"img-fluid\" />\r\n                                        <div className=\"card-title text-center mt-1 col-eq\"><strong>{randomRecipe.title}</strong></div>\r\n                                        <Link to={`recipes/${randomRecipe.id}/information`} className=\"btn btn-success m-2 info-button\">View Details</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Fragment, Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MealPlan extends Component {\r\n    state = {\r\n        error: null,\r\n        mealPlan: [],\r\n        fields: {\r\n            timeFrame: '',\r\n            targetCalories: '',\r\n            diet: '',\r\n        },\r\n        errors: {},\r\n        isLoaded: false\r\n    };\r\n\r\n    handleValidation = () => {\r\n        const fields = this.state.fields\r\n        const errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!fields.timeFrame) {\r\n            errors.timeFrame = \"Fill out this field.\"\r\n            formIsValid = false;\r\n        }\r\n        if (!fields.targetCalories) {\r\n            formIsValid = false;\r\n            errors.targetCalories = \"Fill out this field.\"\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        console.log(formIsValid);\r\n        console.log(fields)\r\n        return formIsValid\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value, type, name } = event.currentTarget\r\n        console.log(type, value, name);\r\n        this.setState(prevState => ({\r\n            fields: {\r\n                ...prevState.fields,\r\n                [name]: type === 'number' ? parseInt(value, 10) : value\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        const fields = this.state.fields\r\n        event.preventDefault();\r\n        if (this.handleValidation()) {\r\n            try {\r\n                const data = await fetch(\r\n                    `https://api.spoonacular.com/recipes/mealplans/generate?timeFrame=${fields.timeFrame}&targetCalories=${fields.targetCalories}&diet=${fields.diet}&apiKey=aa3d290f817b4356a170f6ffde9ecfea`\r\n                )\r\n                const result = await data.json();\r\n                console.log(result)\r\n                this.setState({\r\n                    mealPlan: result,\r\n                    isLoaded: true\r\n                });\r\n            } catch (error) {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"Form is invalid\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            errors,\r\n            mealPlan,\r\n            fields,\r\n            isLoaded\r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <form className=\"container mt-3\" onSubmit={this.handleSubmit}>\r\n                    <p className=\"lead\">Generate a meal plan with three meals per day (breakfast, lunch, and dinner).</p>\r\n                    <p>Would you like a meal plan for the day or week?</p>\r\n                    <div className=\"my-3\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"timeFrame\"\r\n                                value=\"day\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"form-check-label\">Day</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"timeFrame\"\r\n                                value=\"week\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label className=\"form-check-label\">Week</label>\r\n                        </div>\r\n                        <div className='text-danger'>{errors.timeFrame}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Target Calories:\r\n                                <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                name=\"targetCalories\"\r\n                                value={fields.targetCalories}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <div className='text-danger'>{errors.targetCalories}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >\r\n                            Diet:\r\n                            <select className=\"form-control\" value={fields.diet} name=\"diet\" onChange={this.handleChange} >\r\n                                <option value=\"\">Any</option>\r\n                                <option value=\"Gluten Free\">Gluten Free</option>\r\n                                <option value=\"Ketogenic\">Ketogenic</option>\r\n                                <option value=\"Vegetarian\">Vegetarian</option>\r\n                                <option value=\"Vegan\">Vegan</option>\r\n                                <option value=\"Paleo\">Paleo</option>\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={this.handleClick}\r\n                        value=\"Submit\"\r\n                    />\r\n                </form>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {isLoaded && mealPlan.items ? mealPlan.items.map(recipe => (\r\n                            <div key={JSON.parse(recipe.value).id} className=\"col-12 col-sm-2 col-md-4 mb-3\">\r\n                                <div className=\"card card-stuff mt-3 footer-widget\">\r\n                                    <img src={`https://spoonacular.com/recipeImages/${JSON.parse(recipe.value).id}-556x370.jpg`} className=\"img-fluid img\" />\r\n                                    <div className=\"card-body col-eq\">\r\n                                        <h5 className=\"card-title\">{JSON.parse(recipe.value).title}</h5>\r\n                                        <p className=\"\">Day: {recipe.day}</p>\r\n                                        <Link to={`recipes/${JSON.parse(recipe.value).id}/information`} className=\"btn btn-success info-button\">View Details</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) : null}\r\n                        {isLoaded && mealPlan.meals ? mealPlan.meals.map(meal => (\r\n                            <div key={meal.id} className=\"col-12 col-sm-6 col-md-4 mb-3\">\r\n                                <div className=\"card card-stuff mt-3 footer-widget\">\r\n                                    <img className=\"img-fluid img\" src={`https://spoonacular.com/recipeImages/${meal.image}`} />\r\n                                    <div className=\"card-body col-eq\">\r\n                                        <h5 className=\"card-title\">{meal.title}</h5>\r\n                                        <p>Ready In: {meal.readyInMinutes} Minutes</p>\r\n                                        <p className=\"\">Servings: {meal.servings}</p>\r\n                                        <Link to={`recipes/${meal.id}/information`} className=\"btn btn-success info-button\">View Details</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) : null}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MealPlan;","import React, { Fragment } from 'react';\nimport { BrowserRouter as HashRouter, Route, Switch } from \"react-router-dom\"\n\nimport './App.css';\n\nimport SearchRecipes from './components/Recipe/SearchRecipes';\nimport RecipeDetails from './components/Recipe/RecipeDetails/Details';\nimport Menu from './components/Menu/Menu';\nimport MenuItemDetails from './components/Menu/MenuItemDetails';\nimport SearchByMacros from './components/SearchByMacros';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport MealPlan from './components/MealPlan';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/meal-plan\" component={MealPlan} />\n          <Route exact path=\"/recipes\" component={SearchRecipes} />\n          <Route exact path=\"/recipes/:id/information\" component={RecipeDetails} />\n          <Route exact path=\"/menu\" component={Menu} />\n          <Route exact path=\"/food/menuItems/:id\" component={MenuItemDetails} />\n          <Route exact path=\"/search-by-macros\" component={SearchByMacros} />\n        </Switch>\n      </Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}